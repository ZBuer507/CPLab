
I0:
P'-> .P ,#
P-> .D ,#
P-> .S ,#
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,if
S-> .if B then S ,call
S-> .if B then S ,id
S-> .if B then S ,while
S-> .if B then S ,if
S-> .if B then S else S ,call
S-> .if B then S else S ,id
S-> .if B then S else S ,while
S-> .if B then S else S ,if
S-> .while B do S ,call
S-> .while B do S ,id
S-> .while B do S ,while
S-> .while B do S ,if
S-> .call id ( Elist ) ,call
S-> .call id ( Elist ) ,id
S-> .call id ( Elist ) ,while
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I1:
P'-> P. ,#

I2:
P-> D. ,#
D-> D .D ,#
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I3:
D-> D D. ,#
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,#
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,#
D-> .proc id ; D S ,#
D-> .T id ; ,#
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I4:
D-> proc .id ; D S ,#
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I5:
D-> proc id .; D S ,#
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I6:
D-> proc id ; .D S ,#
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I7:
D-> proc id ; D .S ,#
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
S-> .S S ,call
S-> .S S ,id
S-> .S S ,while
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,id
S-> .id = E ; ,while
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,id
S-> .L = E ; ,while
S-> .L = E ; ,if
S-> .if B then S ,call
S-> .if B then S ,id
S-> .if B then S ,while
S-> .if B then S ,if
S-> .if B then S else S ,call
S-> .if B then S else S ,id
S-> .if B then S else S ,while
S-> .if B then S else S ,if
S-> .while B do S ,call
S-> .while B do S ,id
S-> .while B do S ,while
S-> .while B do S ,if
S-> .call id ( Elist ) ,call
S-> .call id ( Elist ) ,id
S-> .call id ( Elist ) ,while
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
T-> .X C ,id
T-> .record D ,id
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I8:
D-> proc id ; D S. ,#
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I9:
S-> S S. ,#
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I10:
S-> id .= E ; ,#
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I11:
S-> id = .E ; ,#
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I12:
S-> id = E .; ,#
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I13:
S-> id = E ;. ,#
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if

I14:
E-> E + .E ,;
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I15:
E-> E + E. ,;
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I16:
E-> E * .E ,;
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I17:
E-> E * E. ,;
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I18:
E-> - .E ,;
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I19:
E-> - E. ,;
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I20:
E-> ( .E ) ,;
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I21:
E-> ( E .) ,;
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I22:
E-> ( E ). ,;
E-> ( E ). ,+
E-> ( E ). ,*

I23:
E-> E + .E ,)
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I24:
E-> E + E. ,)
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I25:
E-> E * .E ,)
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I26:
E-> E * E. ,)
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I27:
E-> - .E ,)
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I28:
E-> - E. ,)
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I29:
E-> ( .E ) ,)
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I30:
E-> ( E .) ,)
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I31:
E-> ( E ). ,)
E-> ( E ). ,+
E-> ( E ). ,*

I32:
E-> id. ,)
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I33:
L-> id [ .E ] ,)
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I34:
L-> id [ E .] ,)
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I35:
L-> id [ E ]. ,)
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I36:
E-> E + .E ,]
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I37:
E-> E + E. ,]
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I38:
E-> E * .E ,]
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I39:
E-> E * E. ,]
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I40:
E-> - .E ,]
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I41:
E-> - E. ,]
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I42:
E-> ( .E ) ,]
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I43:
E-> ( E .) ,]
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I44:
E-> ( E ). ,]
E-> ( E ). ,+
E-> ( E ). ,*

I45:
E-> digit. ,)
E-> digit. ,+
E-> digit. ,*

I46:
E-> L. ,)
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I47:
L-> L [ .E ] ,)
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I48:
L-> L [ E .] ,)
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I49:
L-> L [ E ]. ,)
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I50:
E-> id. ,]
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,]
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I51:
L-> id [ .E ] ,]
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I52:
L-> id [ E .] ,]
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I53:
L-> id [ E ]. ,]
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I54:
E-> digit. ,]
E-> digit. ,+
E-> digit. ,*

I55:
E-> L. ,]
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,]
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I56:
L-> L [ .E ] ,]
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I57:
L-> L [ E .] ,]
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I58:
L-> L [ E ]. ,]
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I59:
E-> id. ,;
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,;
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I60:
L-> id [ .E ] ,;
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I61:
L-> id [ E .] ,;
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I62:
L-> id [ E ]. ,;
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I63:
E-> digit. ,;
E-> digit. ,+
E-> digit. ,*

I64:
E-> L. ,;
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,;
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I65:
L-> L [ .E ] ,;
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I66:
L-> L [ E .] ,;
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I67:
L-> L [ E ]. ,;
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I68:
L-> id [ .E ] ,=
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I69:
L-> id [ E .] ,=
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I70:
L-> id [ E ]. ,=
L-> id [ E ]. ,[

I71:
S-> L .= E ; ,#
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I72:
S-> L = .E ; ,#
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I73:
S-> L = E .; ,#
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I74:
S-> L = E ;. ,#
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if

I75:
L-> L [ .E ] ,=
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I76:
L-> L [ E .] ,=
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I77:
L-> L [ E ]. ,=
L-> L [ E ]. ,[

I78:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I79:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I80:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I81:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I82:
S-> if B then S else .S ,#
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> if B then S else .S ,call
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I83:
S-> if B then S else S. ,#
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> if B then S else S. ,call
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I84:
S-> while .B do S ,#
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
S-> while .B do S ,call
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I85:
S-> while B .do S ,#
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
S-> while B .do S ,call
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I86:
S-> while B do .S ,#
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> while B do .S ,call
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I87:
S-> while B do S. ,#
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> while B do S. ,call
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,#
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I88:
S-> call .id ( Elist ) ,#
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I89:
S-> call id .( Elist ) ,#
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I90:
S-> call id ( .Elist ) ,#
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I91:
S-> call id ( Elist .) ,#
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I92:
S-> call id ( Elist ). ,#
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I93:
Elist-> Elist , .E ,)
Elist-> Elist , .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I94:
Elist-> Elist , E. ,)
Elist-> Elist , E. ,,
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,,
E-> E .* E ,,
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I95:
E-> E + .E ,)
E-> E + .E ,,
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I96:
E-> E + E. ,)
E-> E + E. ,,
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,,
E-> E .* E ,,
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I97:
E-> E * .E ,)
E-> E * .E ,,
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I98:
E-> E * E. ,)
E-> E * E. ,,
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,,
E-> E .* E ,,
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I99:
E-> - .E ,)
E-> - .E ,,
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I100:
E-> - E. ,)
E-> - E. ,,
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,,
E-> E .* E ,,
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I101:
E-> ( .E ) ,)
E-> ( .E ) ,,
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I102:
E-> ( E .) ,)
E-> ( E .) ,,
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I103:
E-> ( E ). ,)
E-> ( E ). ,,
E-> ( E ). ,+
E-> ( E ). ,*

I104:
E-> id. ,)
E-> id. ,,
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,,
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I105:
L-> id [ .E ] ,)
L-> id [ .E ] ,,
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I106:
L-> id [ E .] ,)
L-> id [ E .] ,,
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I107:
L-> id [ E ]. ,)
L-> id [ E ]. ,,
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I108:
E-> digit. ,)
E-> digit. ,,
E-> digit. ,+
E-> digit. ,*

I109:
E-> L. ,)
E-> L. ,,
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,,
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I110:
L-> L [ .E ] ,)
L-> L [ .E ] ,,
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I111:
L-> L [ E .] ,)
L-> L [ E .] ,,
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I112:
L-> L [ E ]. ,)
L-> L [ E ]. ,,
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I113:
Elist-> E. ,)
Elist-> E. ,,
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,,
E-> E .* E ,,
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I114:
B-> B or .B ,do
B-> B or .B ,or
B-> B or .B ,and
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I115:
B-> B or B. ,do
B-> B or B. ,or
B-> B or B. ,and
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I116:
B-> B and .B ,do
B-> B and .B ,or
B-> B and .B ,and
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I117:
B-> B and B. ,do
B-> B and B. ,or
B-> B and B. ,and
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I118:
B-> not .B ,do
B-> not .B ,or
B-> not .B ,and
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I119:
B-> not B. ,do
B-> not B. ,or
B-> not B. ,and
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I120:
B-> ( .B ) ,do
B-> ( .B ) ,or
B-> ( .B ) ,and
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I121:
B-> ( B .) ,do
B-> ( B .) ,or
B-> ( B .) ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I122:
B-> ( B ). ,do
B-> ( B ). ,or
B-> ( B ). ,and

I123:
B-> B or .B ,)
B-> B or .B ,or
B-> B or .B ,and
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I124:
B-> B or B. ,)
B-> B or B. ,or
B-> B or B. ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I125:
B-> B and .B ,)
B-> B and .B ,or
B-> B and .B ,and
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I126:
B-> B and B. ,)
B-> B and B. ,or
B-> B and B. ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I127:
B-> not .B ,)
B-> not .B ,or
B-> not .B ,and
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I128:
B-> not B. ,)
B-> not B. ,or
B-> not B. ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I129:
B-> ( .B ) ,)
B-> ( .B ) ,or
B-> ( .B ) ,and
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I130:
B-> ( B .) ,)
B-> ( B .) ,or
B-> ( B .) ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I131:
B-> ( B ). ,)
B-> ( B ). ,or
B-> ( B ). ,and

I132:
E-> ( E .) ,==
E-> ( E .) ,<=
E-> ( E .) ,!=
E-> ( E .) ,<
E-> ( E .) ,>
E-> ( E .) ,>=
E-> ( E .) ,+
E-> ( E .) ,*
B-> E .relop E ,)
E-> E .+ E ,)
E-> E .* E ,)
B-> E .relop E ,or
B-> E .relop E ,and
E-> E .+ E ,==
E-> E .+ E ,<=
E-> E .+ E ,!=
E-> E .+ E ,<
E-> E .+ E ,>
E-> E .+ E ,>=
E-> E .* E ,==
E-> E .* E ,<=
E-> E .* E ,!=
E-> E .* E ,<
E-> E .* E ,>
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*
relop-> .< ,(
relop-> .< ,id
relop-> .< ,-
relop-> .< ,digit
relop-> .<= ,(
relop-> .<= ,id
relop-> .<= ,-
relop-> .<= ,digit
relop-> .== ,(
relop-> .== ,id
relop-> .== ,-
relop-> .== ,digit
relop-> .!= ,(
relop-> .!= ,id
relop-> .!= ,-
relop-> .!= ,digit
relop-> .> ,(
relop-> .> ,id
relop-> .> ,-
relop-> .> ,digit
relop-> .>= ,(
relop-> .>= ,id
relop-> .>= ,-
relop-> .>= ,digit

I133:
E-> ( E ). ,==
E-> ( E ). ,<=
E-> ( E ). ,!=
E-> ( E ). ,<
E-> ( E ). ,>
E-> ( E ). ,>=
E-> ( E ). ,+
E-> ( E ). ,*

I134:
B-> E relop .E ,)
B-> E relop .E ,or
B-> E relop .E ,and
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I135:
B-> E relop E. ,)
B-> E relop E. ,or
B-> E relop E. ,and
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I136:
E-> E + .E ,)
E-> E + .E ,or
E-> E + .E ,and
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I137:
E-> E + E. ,)
E-> E + E. ,or
E-> E + E. ,and
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I138:
E-> E * .E ,)
E-> E * .E ,or
E-> E * .E ,and
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I139:
E-> E * E. ,)
E-> E * E. ,or
E-> E * E. ,and
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I140:
E-> - .E ,)
E-> - .E ,or
E-> - .E ,and
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I141:
E-> - E. ,)
E-> - E. ,or
E-> - E. ,and
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I142:
E-> ( .E ) ,)
E-> ( .E ) ,or
E-> ( .E ) ,and
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I143:
E-> ( E .) ,)
E-> ( E .) ,or
E-> ( E .) ,and
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I144:
E-> ( E ). ,)
E-> ( E ). ,or
E-> ( E ). ,and
E-> ( E ). ,+
E-> ( E ). ,*

I145:
E-> id. ,)
E-> id. ,or
E-> id. ,and
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I146:
L-> id [ .E ] ,)
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I147:
L-> id [ E .] ,)
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I148:
L-> id [ E ]. ,)
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I149:
E-> digit. ,)
E-> digit. ,or
E-> digit. ,and
E-> digit. ,+
E-> digit. ,*

I150:
E-> L. ,)
E-> L. ,or
E-> L. ,and
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I151:
L-> L [ .E ] ,)
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I152:
L-> L [ E .] ,)
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I153:
L-> L [ E ]. ,)
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I154:
E-> E + .E ,)
E-> E + .E ,==
E-> E + .E ,<=
E-> E + .E ,!=
E-> E + .E ,<
E-> E + .E ,>
E-> E + .E ,>=
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I155:
E-> E + E. ,)
E-> E + E. ,==
E-> E + E. ,<=
E-> E + E. ,!=
E-> E + E. ,<
E-> E + E. ,>
E-> E + E. ,>=
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I156:
E-> E * .E ,)
E-> E * .E ,==
E-> E * .E ,<=
E-> E * .E ,!=
E-> E * .E ,<
E-> E * .E ,>
E-> E * .E ,>=
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I157:
E-> E * E. ,)
E-> E * E. ,==
E-> E * E. ,<=
E-> E * E. ,!=
E-> E * E. ,<
E-> E * E. ,>
E-> E * E. ,>=
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I158:
E-> - .E ,)
E-> - .E ,==
E-> - .E ,<=
E-> - .E ,!=
E-> - .E ,<
E-> - .E ,>
E-> - .E ,>=
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I159:
E-> - E. ,)
E-> - E. ,==
E-> - E. ,<=
E-> - E. ,!=
E-> - E. ,<
E-> - E. ,>
E-> - E. ,>=
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I160:
E-> ( .E ) ,)
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I161:
E-> ( E .) ,)
E-> ( E .) ,==
E-> ( E .) ,<=
E-> ( E .) ,!=
E-> ( E .) ,<
E-> ( E .) ,>
E-> ( E .) ,>=
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I162:
E-> ( E ). ,)
E-> ( E ). ,==
E-> ( E ). ,<=
E-> ( E ). ,!=
E-> ( E ). ,<
E-> ( E ). ,>
E-> ( E ). ,>=
E-> ( E ). ,+
E-> ( E ). ,*

I163:
E-> id. ,)
E-> id. ,==
E-> id. ,<=
E-> id. ,!=
E-> id. ,<
E-> id. ,>
E-> id. ,>=
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,)
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I164:
L-> id [ .E ] ,)
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I165:
L-> id [ E .] ,)
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I166:
L-> id [ E ]. ,)
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I167:
E-> digit. ,)
E-> digit. ,==
E-> digit. ,<=
E-> digit. ,!=
E-> digit. ,<
E-> digit. ,>
E-> digit. ,>=
E-> digit. ,+
E-> digit. ,*

I168:
E-> L. ,)
E-> L. ,==
E-> L. ,<=
E-> L. ,!=
E-> L. ,<
E-> L. ,>
E-> L. ,>=
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,)
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I169:
L-> L [ .E ] ,)
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I170:
L-> L [ E .] ,)
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I171:
L-> L [ E ]. ,)
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I172:
relop-> <. ,(
relop-> <. ,id
relop-> <. ,-
relop-> <. ,digit

I173:
relop-> <=. ,(
relop-> <=. ,id
relop-> <=. ,-
relop-> <=. ,digit

I174:
relop-> ==. ,(
relop-> ==. ,id
relop-> ==. ,-
relop-> ==. ,digit

I175:
relop-> !=. ,(
relop-> !=. ,id
relop-> !=. ,-
relop-> !=. ,digit

I176:
relop-> >. ,(
relop-> >. ,id
relop-> >. ,-
relop-> >. ,digit

I177:
relop-> >=. ,(
relop-> >=. ,id
relop-> >=. ,-
relop-> >=. ,digit

I178:
B-> ( .B ) ,)
E-> ( .E ) ,)
B-> ( .B ) ,or
B-> ( .B ) ,and
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I179:
E-> ( E .) ,)
E-> ( E .) ,==
E-> ( E .) ,<=
E-> ( E .) ,!=
E-> ( E .) ,<
E-> ( E .) ,>
E-> ( E .) ,>=
E-> ( E .) ,+
E-> ( E .) ,*
B-> E .relop E ,)
E-> E .+ E ,)
E-> E .* E ,)
B-> E .relop E ,or
B-> E .relop E ,and
E-> E .+ E ,==
E-> E .+ E ,<=
E-> E .+ E ,!=
E-> E .+ E ,<
E-> E .+ E ,>
E-> E .+ E ,>=
E-> E .* E ,==
E-> E .* E ,<=
E-> E .* E ,!=
E-> E .* E ,<
E-> E .* E ,>
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*
relop-> .< ,(
relop-> .< ,id
relop-> .< ,-
relop-> .< ,digit
relop-> .<= ,(
relop-> .<= ,id
relop-> .<= ,-
relop-> .<= ,digit
relop-> .== ,(
relop-> .== ,id
relop-> .== ,-
relop-> .== ,digit
relop-> .!= ,(
relop-> .!= ,id
relop-> .!= ,-
relop-> .!= ,digit
relop-> .> ,(
relop-> .> ,id
relop-> .> ,-
relop-> .> ,digit
relop-> .>= ,(
relop-> .>= ,id
relop-> .>= ,-
relop-> .>= ,digit

I180:
B-> true. ,)
B-> true. ,or
B-> true. ,and

I181:
B-> false. ,)
B-> false. ,or
B-> false. ,and

I182:
B-> E .relop E ,)
B-> E .relop E ,or
B-> E .relop E ,and
E-> E .+ E ,==
E-> E .+ E ,<=
E-> E .+ E ,!=
E-> E .+ E ,<
E-> E .+ E ,>
E-> E .+ E ,>=
E-> E .* E ,==
E-> E .* E ,<=
E-> E .* E ,!=
E-> E .* E ,<
E-> E .* E ,>
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*
relop-> .< ,(
relop-> .< ,id
relop-> .< ,-
relop-> .< ,digit
relop-> .<= ,(
relop-> .<= ,id
relop-> .<= ,-
relop-> .<= ,digit
relop-> .== ,(
relop-> .== ,id
relop-> .== ,-
relop-> .== ,digit
relop-> .!= ,(
relop-> .!= ,id
relop-> .!= ,-
relop-> .!= ,digit
relop-> .> ,(
relop-> .> ,id
relop-> .> ,-
relop-> .> ,digit
relop-> .>= ,(
relop-> .>= ,id
relop-> .>= ,-
relop-> .>= ,digit

I183:
E-> E + .E ,==
E-> E + .E ,<=
E-> E + .E ,!=
E-> E + .E ,<
E-> E + .E ,>
E-> E + .E ,>=
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I184:
E-> E + E. ,==
E-> E + E. ,<=
E-> E + E. ,!=
E-> E + E. ,<
E-> E + E. ,>
E-> E + E. ,>=
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I185:
E-> E * .E ,==
E-> E * .E ,<=
E-> E * .E ,!=
E-> E * .E ,<
E-> E * .E ,>
E-> E * .E ,>=
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I186:
E-> E * E. ,==
E-> E * E. ,<=
E-> E * E. ,!=
E-> E * E. ,<
E-> E * E. ,>
E-> E * E. ,>=
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I187:
E-> - .E ,==
E-> - .E ,<=
E-> - .E ,!=
E-> - .E ,<
E-> - .E ,>
E-> - .E ,>=
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,==
E-> .E * E ,==
E-> .- E ,==
E-> .( E ) ,==
E-> .id ,==
E-> .digit ,==
E-> .L ,==
E-> .E + E ,<=
E-> .E * E ,<=
E-> .- E ,<=
E-> .( E ) ,<=
E-> .id ,<=
E-> .digit ,<=
E-> .L ,<=
E-> .E + E ,!=
E-> .E * E ,!=
E-> .- E ,!=
E-> .( E ) ,!=
E-> .id ,!=
E-> .digit ,!=
E-> .L ,!=
E-> .E + E ,<
E-> .E * E ,<
E-> .- E ,<
E-> .( E ) ,<
E-> .id ,<
E-> .digit ,<
E-> .L ,<
E-> .E + E ,>
E-> .E * E ,>
E-> .- E ,>
E-> .( E ) ,>
E-> .id ,>
E-> .digit ,>
E-> .L ,>
E-> .E + E ,>=
E-> .E * E ,>=
E-> .- E ,>=
E-> .( E ) ,>=
E-> .id ,>=
E-> .digit ,>=
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I188:
E-> - E. ,==
E-> - E. ,<=
E-> - E. ,!=
E-> - E. ,<
E-> - E. ,>
E-> - E. ,>=
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,==
E-> E .* E ,==
E-> E .+ E ,<=
E-> E .* E ,<=
E-> E .+ E ,!=
E-> E .* E ,!=
E-> E .+ E ,<
E-> E .* E ,<
E-> E .+ E ,>
E-> E .* E ,>
E-> E .+ E ,>=
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I189:
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I190:
E-> ( E .) ,==
E-> ( E .) ,<=
E-> ( E .) ,!=
E-> ( E .) ,<
E-> ( E .) ,>
E-> ( E .) ,>=
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I191:
E-> id. ,==
E-> id. ,<=
E-> id. ,!=
E-> id. ,<
E-> id. ,>
E-> id. ,>=
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,==
L-> id .[ E ] ,<=
L-> id .[ E ] ,!=
L-> id .[ E ] ,<
L-> id .[ E ] ,>
L-> id .[ E ] ,>=
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I192:
L-> id [ .E ] ,==
L-> id [ .E ] ,<=
L-> id [ .E ] ,!=
L-> id [ .E ] ,<
L-> id [ .E ] ,>
L-> id [ .E ] ,>=
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I193:
L-> id [ E .] ,==
L-> id [ E .] ,<=
L-> id [ E .] ,!=
L-> id [ E .] ,<
L-> id [ E .] ,>
L-> id [ E .] ,>=
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I194:
L-> id [ E ]. ,==
L-> id [ E ]. ,<=
L-> id [ E ]. ,!=
L-> id [ E ]. ,<
L-> id [ E ]. ,>
L-> id [ E ]. ,>=
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I195:
E-> digit. ,==
E-> digit. ,<=
E-> digit. ,!=
E-> digit. ,<
E-> digit. ,>
E-> digit. ,>=
E-> digit. ,+
E-> digit. ,*

I196:
E-> L. ,==
E-> L. ,<=
E-> L. ,!=
E-> L. ,<
E-> L. ,>
E-> L. ,>=
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,==
L-> L .[ E ] ,<=
L-> L .[ E ] ,!=
L-> L .[ E ] ,<
L-> L .[ E ] ,>
L-> L .[ E ] ,>=
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I197:
L-> L [ .E ] ,==
L-> L [ .E ] ,<=
L-> L [ .E ] ,!=
L-> L [ .E ] ,<
L-> L [ .E ] ,>
L-> L [ .E ] ,>=
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I198:
L-> L [ E .] ,==
L-> L [ E .] ,<=
L-> L [ E .] ,!=
L-> L [ E .] ,<
L-> L [ E .] ,>
L-> L [ E .] ,>=
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I199:
L-> L [ E ]. ,==
L-> L [ E ]. ,<=
L-> L [ E ]. ,!=
L-> L [ E ]. ,<
L-> L [ E ]. ,>
L-> L [ E ]. ,>=
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I200:
B-> E .relop E ,do
B-> E .relop E ,or
B-> E .relop E ,and
E-> E .+ E ,==
E-> E .+ E ,<=
E-> E .+ E ,!=
E-> E .+ E ,<
E-> E .+ E ,>
E-> E .+ E ,>=
E-> E .* E ,==
E-> E .* E ,<=
E-> E .* E ,!=
E-> E .* E ,<
E-> E .* E ,>
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*
relop-> .< ,(
relop-> .< ,id
relop-> .< ,-
relop-> .< ,digit
relop-> .<= ,(
relop-> .<= ,id
relop-> .<= ,-
relop-> .<= ,digit
relop-> .== ,(
relop-> .== ,id
relop-> .== ,-
relop-> .== ,digit
relop-> .!= ,(
relop-> .!= ,id
relop-> .!= ,-
relop-> .!= ,digit
relop-> .> ,(
relop-> .> ,id
relop-> .> ,-
relop-> .> ,digit
relop-> .>= ,(
relop-> .>= ,id
relop-> .>= ,-
relop-> .>= ,digit

I201:
B-> E relop .E ,do
B-> E relop .E ,or
B-> E relop .E ,and
E-> .E + E ,do
E-> .E * E ,do
E-> .- E ,do
E-> .( E ) ,do
E-> .id ,do
E-> .digit ,do
E-> .L ,do
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I202:
B-> E relop E. ,do
B-> E relop E. ,or
B-> E relop E. ,and
E-> E .+ E ,do
E-> E .* E ,do
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I203:
E-> E + .E ,do
E-> E + .E ,or
E-> E + .E ,and
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,do
E-> .E * E ,do
E-> .- E ,do
E-> .( E ) ,do
E-> .id ,do
E-> .digit ,do
E-> .L ,do
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I204:
E-> E + E. ,do
E-> E + E. ,or
E-> E + E. ,and
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,do
E-> E .* E ,do
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I205:
E-> E * .E ,do
E-> E * .E ,or
E-> E * .E ,and
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,do
E-> .E * E ,do
E-> .- E ,do
E-> .( E ) ,do
E-> .id ,do
E-> .digit ,do
E-> .L ,do
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I206:
E-> E * E. ,do
E-> E * E. ,or
E-> E * E. ,and
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,do
E-> E .* E ,do
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I207:
E-> - .E ,do
E-> - .E ,or
E-> - .E ,and
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,do
E-> .E * E ,do
E-> .- E ,do
E-> .( E ) ,do
E-> .id ,do
E-> .digit ,do
E-> .L ,do
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,do
L-> .L [ E ] ,do
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I208:
E-> - E. ,do
E-> - E. ,or
E-> - E. ,and
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,do
E-> E .* E ,do
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I209:
E-> ( .E ) ,do
E-> ( .E ) ,or
E-> ( .E ) ,and
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I210:
E-> ( E .) ,do
E-> ( E .) ,or
E-> ( E .) ,and
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I211:
E-> ( E ). ,do
E-> ( E ). ,or
E-> ( E ). ,and
E-> ( E ). ,+
E-> ( E ). ,*

I212:
E-> id. ,do
E-> id. ,or
E-> id. ,and
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,do
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I213:
L-> id [ .E ] ,do
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I214:
L-> id [ E .] ,do
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I215:
L-> id [ E ]. ,do
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I216:
E-> digit. ,do
E-> digit. ,or
E-> digit. ,and
E-> digit. ,+
E-> digit. ,*

I217:
E-> L. ,do
E-> L. ,or
E-> L. ,and
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,do
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I218:
L-> L [ .E ] ,do
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I219:
L-> L [ E .] ,do
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I220:
L-> L [ E ]. ,do
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I221:
B-> true. ,do
B-> true. ,or
B-> true. ,and

I222:
B-> false. ,do
B-> false. ,or
B-> false. ,and

I223:
S-> S S. ,#
S-> S S. ,else
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I224:
S-> id .= E ; ,#
S-> id .= E ; ,else
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I225:
S-> id = .E ; ,#
S-> id = .E ; ,else
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I226:
S-> id = E .; ,#
S-> id = E .; ,else
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I227:
S-> id = E ;. ,#
S-> id = E ;. ,else
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if

I228:
S-> L .= E ; ,#
S-> L .= E ; ,else
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I229:
S-> L = .E ; ,#
S-> L = .E ; ,else
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I230:
S-> L = E .; ,#
S-> L = E .; ,else
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I231:
S-> L = E ;. ,#
S-> L = E ;. ,else
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if

I232:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,else
S-> if .B then S else S ,else
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I233:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,else
S-> if B .then S else S ,else
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I234:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,else
S-> if B then .S else S ,else
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I235:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,else
S-> if B then S .else S ,else
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I236:
S-> if B then S else .S ,#
S-> if B then S else .S ,else
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> if B then S else .S ,call
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I237:
S-> if B then S else S. ,#
S-> if B then S else S. ,else
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> if B then S else S. ,call
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I238:
S-> while .B do S ,#
S-> while .B do S ,else
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
S-> while .B do S ,call
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I239:
S-> while B .do S ,#
S-> while B .do S ,else
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
S-> while B .do S ,call
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I240:
S-> while B do .S ,#
S-> while B do .S ,else
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> while B do .S ,call
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I241:
S-> while B do S. ,#
S-> while B do S. ,else
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> while B do S. ,call
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I242:
S-> call .id ( Elist ) ,#
S-> call .id ( Elist ) ,else
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I243:
S-> call id .( Elist ) ,#
S-> call id .( Elist ) ,else
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I244:
S-> call id ( .Elist ) ,#
S-> call id ( .Elist ) ,else
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I245:
S-> call id ( Elist .) ,#
S-> call id ( Elist .) ,else
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I246:
S-> call id ( Elist ). ,#
S-> call id ( Elist ). ,else
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I247:
B-> B or .B ,then
B-> B or .B ,or
B-> B or .B ,and
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I248:
B-> B or B. ,then
B-> B or B. ,or
B-> B or B. ,and
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I249:
B-> B and .B ,then
B-> B and .B ,or
B-> B and .B ,and
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I250:
B-> B and B. ,then
B-> B and B. ,or
B-> B and B. ,and
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I251:
B-> not .B ,then
B-> not .B ,or
B-> not .B ,and
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I252:
B-> not B. ,then
B-> not B. ,or
B-> not B. ,and
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I253:
B-> ( .B ) ,then
B-> ( .B ) ,or
B-> ( .B ) ,and
E-> ( .E ) ,==
E-> ( .E ) ,<=
E-> ( .E ) ,!=
E-> ( .E ) ,<
E-> ( .E ) ,>
E-> ( .E ) ,>=
E-> ( .E ) ,+
E-> ( .E ) ,*
B-> .B or B ,)
B-> .B and B ,)
B-> .not B ,)
B-> .( B ) ,)
B-> .E relop E ,)
B-> .true ,)
B-> .false ,)
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I254:
B-> ( B .) ,then
B-> ( B .) ,or
B-> ( B .) ,and
B-> B .or B ,)
B-> B .and B ,)
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I255:
B-> ( B ). ,then
B-> ( B ). ,or
B-> ( B ). ,and

I256:
B-> E .relop E ,then
B-> E .relop E ,or
B-> E .relop E ,and
E-> E .+ E ,==
E-> E .+ E ,<=
E-> E .+ E ,!=
E-> E .+ E ,<
E-> E .+ E ,>
E-> E .+ E ,>=
E-> E .* E ,==
E-> E .* E ,<=
E-> E .* E ,!=
E-> E .* E ,<
E-> E .* E ,>
E-> E .* E ,>=
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*
relop-> .< ,(
relop-> .< ,id
relop-> .< ,-
relop-> .< ,digit
relop-> .<= ,(
relop-> .<= ,id
relop-> .<= ,-
relop-> .<= ,digit
relop-> .== ,(
relop-> .== ,id
relop-> .== ,-
relop-> .== ,digit
relop-> .!= ,(
relop-> .!= ,id
relop-> .!= ,-
relop-> .!= ,digit
relop-> .> ,(
relop-> .> ,id
relop-> .> ,-
relop-> .> ,digit
relop-> .>= ,(
relop-> .>= ,id
relop-> .>= ,-
relop-> .>= ,digit

I257:
B-> E relop .E ,then
B-> E relop .E ,or
B-> E relop .E ,and
E-> .E + E ,then
E-> .E * E ,then
E-> .- E ,then
E-> .( E ) ,then
E-> .id ,then
E-> .digit ,then
E-> .L ,then
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I258:
B-> E relop E. ,then
B-> E relop E. ,or
B-> E relop E. ,and
E-> E .+ E ,then
E-> E .* E ,then
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I259:
E-> E + .E ,then
E-> E + .E ,or
E-> E + .E ,and
E-> E + .E ,+
E-> E + .E ,*
E-> .E + E ,then
E-> .E * E ,then
E-> .- E ,then
E-> .( E ) ,then
E-> .id ,then
E-> .digit ,then
E-> .L ,then
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I260:
E-> E + E. ,then
E-> E + E. ,or
E-> E + E. ,and
E-> E + E. ,+
E-> E + E. ,*
E-> E .+ E ,then
E-> E .* E ,then
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I261:
E-> E * .E ,then
E-> E * .E ,or
E-> E * .E ,and
E-> E * .E ,+
E-> E * .E ,*
E-> .E + E ,then
E-> .E * E ,then
E-> .- E ,then
E-> .( E ) ,then
E-> .id ,then
E-> .digit ,then
E-> .L ,then
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I262:
E-> E * E. ,then
E-> E * E. ,or
E-> E * E. ,and
E-> E * E. ,+
E-> E * E. ,*
E-> E .+ E ,then
E-> E .* E ,then
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I263:
E-> - .E ,then
E-> - .E ,or
E-> - .E ,and
E-> - .E ,+
E-> - .E ,*
E-> .E + E ,then
E-> .E * E ,then
E-> .- E ,then
E-> .( E ) ,then
E-> .id ,then
E-> .digit ,then
E-> .L ,then
E-> .E + E ,or
E-> .E * E ,or
E-> .- E ,or
E-> .( E ) ,or
E-> .id ,or
E-> .digit ,or
E-> .L ,or
E-> .E + E ,and
E-> .E * E ,and
E-> .- E ,and
E-> .( E ) ,and
E-> .id ,and
E-> .digit ,and
E-> .L ,and
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,then
L-> .L [ E ] ,then
L-> .id [ E ] ,or
L-> .L [ E ] ,or
L-> .id [ E ] ,and
L-> .L [ E ] ,and
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I264:
E-> - E. ,then
E-> - E. ,or
E-> - E. ,and
E-> - E. ,+
E-> - E. ,*
E-> E .+ E ,then
E-> E .* E ,then
E-> E .+ E ,or
E-> E .* E ,or
E-> E .+ E ,and
E-> E .* E ,and
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I265:
E-> ( .E ) ,then
E-> ( .E ) ,or
E-> ( .E ) ,and
E-> ( .E ) ,+
E-> ( .E ) ,*
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I266:
E-> ( E .) ,then
E-> ( E .) ,or
E-> ( E .) ,and
E-> ( E .) ,+
E-> ( E .) ,*
E-> E .+ E ,)
E-> E .* E ,)
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I267:
E-> ( E ). ,then
E-> ( E ). ,or
E-> ( E ). ,and
E-> ( E ). ,+
E-> ( E ). ,*

I268:
E-> id. ,then
E-> id. ,or
E-> id. ,and
E-> id. ,+
E-> id. ,*
L-> id .[ E ] ,then
L-> id .[ E ] ,or
L-> id .[ E ] ,and
L-> id .[ E ] ,+
L-> id .[ E ] ,*
L-> id .[ E ] ,[

I269:
L-> id [ .E ] ,then
L-> id [ .E ] ,or
L-> id [ .E ] ,and
L-> id [ .E ] ,+
L-> id [ .E ] ,*
L-> id [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I270:
L-> id [ E .] ,then
L-> id [ E .] ,or
L-> id [ E .] ,and
L-> id [ E .] ,+
L-> id [ E .] ,*
L-> id [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I271:
L-> id [ E ]. ,then
L-> id [ E ]. ,or
L-> id [ E ]. ,and
L-> id [ E ]. ,+
L-> id [ E ]. ,*
L-> id [ E ]. ,[

I272:
E-> digit. ,then
E-> digit. ,or
E-> digit. ,and
E-> digit. ,+
E-> digit. ,*

I273:
E-> L. ,then
E-> L. ,or
E-> L. ,and
E-> L. ,+
E-> L. ,*
L-> L .[ E ] ,then
L-> L .[ E ] ,or
L-> L .[ E ] ,and
L-> L .[ E ] ,+
L-> L .[ E ] ,*
L-> L .[ E ] ,[

I274:
L-> L [ .E ] ,then
L-> L [ .E ] ,or
L-> L [ .E ] ,and
L-> L [ .E ] ,+
L-> L [ .E ] ,*
L-> L [ .E ] ,[
E-> .E + E ,]
E-> .E * E ,]
E-> .- E ,]
E-> .( E ) ,]
E-> .id ,]
E-> .digit ,]
E-> .L ,]
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,]
L-> .L [ E ] ,]
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I275:
L-> L [ E .] ,then
L-> L [ E .] ,or
L-> L [ E .] ,and
L-> L [ E .] ,+
L-> L [ E .] ,*
L-> L [ E .] ,[
E-> E .+ E ,]
E-> E .* E ,]
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I276:
L-> L [ E ]. ,then
L-> L [ E ]. ,or
L-> L [ E ]. ,and
L-> L [ E ]. ,+
L-> L [ E ]. ,*
L-> L [ E ]. ,[

I277:
B-> true. ,then
B-> true. ,or
B-> true. ,and

I278:
B-> false. ,then
B-> false. ,or
B-> false. ,and

I279:
D-> D D. ,call
D-> D D. ,id
D-> D D. ,while
D-> D D. ,if
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I280:
D-> proc .id ; D S ,call
D-> proc .id ; D S ,id
D-> proc .id ; D S ,while
D-> proc .id ; D S ,if
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I281:
D-> proc id .; D S ,call
D-> proc id .; D S ,id
D-> proc id .; D S ,while
D-> proc id .; D S ,if
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I282:
D-> proc id ; .D S ,call
D-> proc id ; .D S ,id
D-> proc id ; .D S ,while
D-> proc id ; .D S ,if
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I283:
D-> proc id ; D .S ,call
D-> proc id ; D .S ,id
D-> proc id ; D .S ,while
D-> proc id ; D .S ,if
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
T-> .X C ,id
T-> .record D ,id
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I284:
D-> proc id ; D S. ,call
D-> proc id ; D S. ,id
D-> proc id ; D S. ,while
D-> proc id ; D S. ,if
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I285:
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I286:
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I287:
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I288:
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I289:
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real

I290:
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I291:
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I292:
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I293:
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real

I294:
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I295:
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I296:
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I297:
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> S .S ,call
S-> S .S ,else
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I298:
S-> if B then S else .S ,call
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I299:
S-> if B then S else S. ,call
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I300:
S-> while .B do S ,call
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I301:
S-> while B .do S ,call
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I302:
S-> while B do .S ,call
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I303:
S-> while B do S. ,call
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I304:
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real

I305:
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real

I306:
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I307:
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I308:
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real

I309:
S-> S S. ,call
S-> S S. ,else
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S .S ,call
S-> S .S ,else
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I310:
S-> id .= E ; ,call
S-> id .= E ; ,else
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I311:
S-> id = .E ; ,call
S-> id = .E ; ,else
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I312:
S-> id = E .; ,call
S-> id = E .; ,else
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I313:
S-> id = E ;. ,call
S-> id = E ;. ,else
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real

I314:
S-> L .= E ; ,call
S-> L .= E ; ,else
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I315:
S-> L = .E ; ,call
S-> L = .E ; ,else
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I316:
S-> L = E .; ,call
S-> L = E .; ,else
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I317:
S-> L = E ;. ,call
S-> L = E ;. ,else
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real

I318:
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,else
S-> if .B then S else S ,else
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I319:
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,else
S-> if B .then S else S ,else
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I320:
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,else
S-> if B then .S else S ,else
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I321:
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,else
S-> if B then S .else S ,else
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> S .S ,call
S-> S .S ,else
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I322:
S-> if B then S else .S ,call
S-> if B then S else .S ,else
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I323:
S-> if B then S else S. ,call
S-> if B then S else S. ,else
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> S .S ,call
S-> S .S ,else
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I324:
S-> while .B do S ,call
S-> while .B do S ,else
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I325:
S-> while B .do S ,call
S-> while B .do S ,else
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I326:
S-> while B do .S ,call
S-> while B do .S ,else
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I327:
S-> while B do S. ,call
S-> while B do S. ,else
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> S .S ,call
S-> S .S ,else
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I328:
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,else
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real

I329:
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,else
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real

I330:
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,else
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I331:
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,else
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I332:
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,else
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real

I333:
D-> T .id ; ,call
D-> T .id ; ,id
D-> T .id ; ,while
D-> T .id ; ,if
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I334:
D-> T id .; ,call
D-> T id .; ,id
D-> T id .; ,while
D-> T id .; ,if
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I335:
D-> T id ;. ,call
D-> T id ;. ,id
D-> T id ;. ,while
D-> T id ;. ,if
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I336:
T-> X .C ,id
C-> .[ num ] C ,id
C-> . ,id

I337:
T-> X C. ,id

I338:
C-> [ .num ] C ,id

I339:
C-> [ num .] C ,id

I340:
C-> [ num ] .C ,id
C-> .[ num ] C ,id
C-> . ,id

I341:
C-> [ num ] C. ,id

I342:
T-> record .D ,id
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I343:
T-> record D. ,id
D-> D .D ,id
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I344:
D-> D D. ,id
D-> D D. ,proc
D-> D D. ,record
D-> D D. ,integer
D-> D D. ,real
D-> D .D ,id
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I345:
D-> proc .id ; D S ,id
D-> proc .id ; D S ,proc
D-> proc .id ; D S ,record
D-> proc .id ; D S ,integer
D-> proc .id ; D S ,real

I346:
D-> proc id .; D S ,id
D-> proc id .; D S ,proc
D-> proc id .; D S ,record
D-> proc id .; D S ,integer
D-> proc id .; D S ,real

I347:
D-> proc id ; .D S ,id
D-> proc id ; .D S ,proc
D-> proc id ; .D S ,record
D-> proc id ; .D S ,integer
D-> proc id ; .D S ,real
D-> .D D ,call
D-> .D D ,id
D-> .D D ,while
D-> .D D ,if
D-> .proc id ; D S ,call
D-> .proc id ; D S ,id
D-> .proc id ; D S ,while
D-> .proc id ; D S ,if
D-> .T id ; ,call
D-> .T id ; ,id
D-> .T id ; ,while
D-> .T id ; ,if
D-> .D D ,proc
D-> .D D ,record
D-> .D D ,integer
D-> .D D ,real
D-> .proc id ; D S ,proc
D-> .proc id ; D S ,record
D-> .proc id ; D S ,integer
D-> .proc id ; D S ,real
D-> .T id ; ,proc
D-> .T id ; ,record
D-> .T id ; ,integer
D-> .T id ; ,real
T-> .X C ,id
T-> .record D ,id
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I348:
D-> proc id ; D .S ,id
D-> proc id ; D .S ,proc
D-> proc id ; D .S ,record
D-> proc id ; D .S ,integer
D-> proc id ; D .S ,real
D-> D .D ,call
D-> D .D ,id
D-> D .D ,while
D-> D .D ,if
D-> D .D ,proc
D-> D .D ,record
D-> D .D ,integer
D-> D .D ,real
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
D-> .D D ,call
D-> .proc id ; D S ,call
D-> .T id ; ,call
D-> .D D ,id
D-> .proc id ; D S ,id
D-> .T id ; ,id
D-> .D D ,while
D-> .proc id ; D S ,while
D-> .T id ; ,while
D-> .D D ,if
D-> .proc id ; D S ,if
D-> .T id ; ,if
D-> .D D ,proc
D-> .proc id ; D S ,proc
D-> .T id ; ,proc
D-> .D D ,record
D-> .proc id ; D S ,record
D-> .T id ; ,record
D-> .D D ,integer
D-> .proc id ; D S ,integer
D-> .T id ; ,integer
D-> .D D ,real
D-> .proc id ; D S ,real
D-> .T id ; ,real
S-> .S S ,call
S-> .S S ,while
S-> .S S ,if
S-> .id = E ; ,call
S-> .id = E ; ,while
S-> .id = E ; ,if
S-> .L = E ; ,call
S-> .L = E ; ,while
S-> .L = E ; ,if
S-> .if B then S ,call
S-> .if B then S ,while
S-> .if B then S ,if
S-> .if B then S else S ,call
S-> .if B then S else S ,while
S-> .if B then S else S ,if
S-> .while B do S ,call
S-> .while B do S ,while
S-> .while B do S ,if
S-> .call id ( Elist ) ,call
S-> .call id ( Elist ) ,while
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
T-> .X C ,id
T-> .record D ,id
L-> .id [ E ] ,[
L-> .L [ E ] ,[
X-> .integer ,[
X-> .integer ,id
X-> .real ,[
X-> .real ,id

I349:
D-> proc id ; D S. ,id
D-> proc id ; D S. ,proc
D-> proc id ; D S. ,record
D-> proc id ; D S. ,integer
D-> proc id ; D S. ,real
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I350:
S-> S S. ,id
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,while
S-> S S. ,if
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I351:
S-> id .= E ; ,id
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I352:
S-> id = .E ; ,id
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I353:
S-> id = E .; ,id
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I354:
S-> id = E ;. ,id
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,while
S-> id = E ;. ,if

I355:
S-> L .= E ; ,id
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I356:
S-> L = .E ; ,id
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I357:
S-> L = E .; ,id
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I358:
S-> L = E ;. ,id
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,while
S-> L = E ;. ,if

I359:
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I360:
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I361:
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I362:
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I363:
S-> if B then S else .S ,id
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> if B then S else .S ,call
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I364:
S-> if B then S else S. ,id
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> if B then S else S. ,call
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I365:
S-> while .B do S ,id
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
S-> while .B do S ,call
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I366:
S-> while B .do S ,id
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
S-> while B .do S ,call
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I367:
S-> while B do .S ,id
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> while B do .S ,call
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I368:
S-> while B do S. ,id
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> while B do S. ,call
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,id
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I369:
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I370:
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I371:
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I372:
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I373:
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I374:
S-> S S. ,id
S-> S S. ,else
S-> S S. ,proc
S-> S S. ,record
S-> S S. ,integer
S-> S S. ,real
S-> S S. ,call
S-> S S. ,while
S-> S S. ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I375:
S-> id .= E ; ,id
S-> id .= E ; ,else
S-> id .= E ; ,proc
S-> id .= E ; ,record
S-> id .= E ; ,integer
S-> id .= E ; ,real
S-> id .= E ; ,call
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I376:
S-> id = .E ; ,id
S-> id = .E ; ,else
S-> id = .E ; ,proc
S-> id = .E ; ,record
S-> id = .E ; ,integer
S-> id = .E ; ,real
S-> id = .E ; ,call
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I377:
S-> id = E .; ,id
S-> id = E .; ,else
S-> id = E .; ,proc
S-> id = E .; ,record
S-> id = E .; ,integer
S-> id = E .; ,real
S-> id = E .; ,call
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I378:
S-> id = E ;. ,id
S-> id = E ;. ,else
S-> id = E ;. ,proc
S-> id = E ;. ,record
S-> id = E ;. ,integer
S-> id = E ;. ,real
S-> id = E ;. ,call
S-> id = E ;. ,while
S-> id = E ;. ,if

I379:
S-> L .= E ; ,id
S-> L .= E ; ,else
S-> L .= E ; ,proc
S-> L .= E ; ,record
S-> L .= E ; ,integer
S-> L .= E ; ,real
S-> L .= E ; ,call
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I380:
S-> L = .E ; ,id
S-> L = .E ; ,else
S-> L = .E ; ,proc
S-> L = .E ; ,record
S-> L = .E ; ,integer
S-> L = .E ; ,real
S-> L = .E ; ,call
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I381:
S-> L = E .; ,id
S-> L = E .; ,else
S-> L = E .; ,proc
S-> L = E .; ,record
S-> L = E .; ,integer
S-> L = E .; ,real
S-> L = E .; ,call
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I382:
S-> L = E ;. ,id
S-> L = E ;. ,else
S-> L = E ;. ,proc
S-> L = E ;. ,record
S-> L = E ;. ,integer
S-> L = E ;. ,real
S-> L = E ;. ,call
S-> L = E ;. ,while
S-> L = E ;. ,if

I383:
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,else
S-> if .B then S else S ,else
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I384:
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,else
S-> if B .then S else S ,else
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I385:
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,else
S-> if B then .S else S ,else
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I386:
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,else
S-> if B then S .else S ,else
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I387:
S-> if B then S else .S ,id
S-> if B then S else .S ,else
S-> if B then S else .S ,proc
S-> if B then S else .S ,record
S-> if B then S else .S ,integer
S-> if B then S else .S ,real
S-> if B then S else .S ,call
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I388:
S-> if B then S else S. ,id
S-> if B then S else S. ,else
S-> if B then S else S. ,proc
S-> if B then S else S. ,record
S-> if B then S else S. ,integer
S-> if B then S else S. ,real
S-> if B then S else S. ,call
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I389:
S-> while .B do S ,id
S-> while .B do S ,else
S-> while .B do S ,proc
S-> while .B do S ,record
S-> while .B do S ,integer
S-> while .B do S ,real
S-> while .B do S ,call
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I390:
S-> while B .do S ,id
S-> while B .do S ,else
S-> while B .do S ,proc
S-> while B .do S ,record
S-> while B .do S ,integer
S-> while B .do S ,real
S-> while B .do S ,call
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I391:
S-> while B do .S ,id
S-> while B do .S ,else
S-> while B do .S ,proc
S-> while B do .S ,record
S-> while B do .S ,integer
S-> while B do .S ,real
S-> while B do .S ,call
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I392:
S-> while B do S. ,id
S-> while B do S. ,else
S-> while B do S. ,proc
S-> while B do S. ,record
S-> while B do S. ,integer
S-> while B do S. ,real
S-> while B do S. ,call
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I393:
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,else
S-> call .id ( Elist ) ,proc
S-> call .id ( Elist ) ,record
S-> call .id ( Elist ) ,integer
S-> call .id ( Elist ) ,real
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I394:
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,else
S-> call id .( Elist ) ,proc
S-> call id .( Elist ) ,record
S-> call id .( Elist ) ,integer
S-> call id .( Elist ) ,real
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I395:
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,else
S-> call id ( .Elist ) ,proc
S-> call id ( .Elist ) ,record
S-> call id ( .Elist ) ,integer
S-> call id ( .Elist ) ,real
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I396:
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,else
S-> call id ( Elist .) ,proc
S-> call id ( Elist .) ,record
S-> call id ( Elist .) ,integer
S-> call id ( Elist .) ,real
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I397:
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,else
S-> call id ( Elist ). ,proc
S-> call id ( Elist ). ,record
S-> call id ( Elist ). ,integer
S-> call id ( Elist ). ,real
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I398:
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S ,while
S-> if .B then S ,if
S-> if .B then S else S ,call
S-> if .B then S else S ,while
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I399:
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S ,while
S-> if B .then S ,if
S-> if B .then S else S ,call
S-> if B .then S else S ,while
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I400:
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S ,while
S-> if B then .S ,if
S-> if B then .S else S ,call
S-> if B then .S else S ,while
S-> if B then .S else S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I401:
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S. ,while
S-> if B then S. ,if
S-> if B then S .else S ,call
S-> if B then S .else S ,while
S-> if B then S .else S ,if
S-> S .S ,id
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,while
S-> S .S ,if
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I402:
X-> integer. ,[
X-> integer. ,id

I403:
X-> real. ,[
X-> real. ,id

I404:
D-> T .id ; ,id
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I405:
D-> T id .; ,id
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I406:
D-> T id ;. ,id
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I407:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,proc
S-> if .B then S else S ,proc
S-> if .B then S ,record
S-> if .B then S else S ,record
S-> if .B then S ,integer
S-> if .B then S else S ,integer
S-> if .B then S ,real
S-> if .B then S else S ,real
S-> if .B then S ,call
S-> if .B then S ,id
S-> if .B then S ,while
S-> if .B then S ,if
S-> if .B then S else S ,call
S-> if .B then S else S ,id
S-> if .B then S else S ,while
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I408:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,proc
S-> if B .then S else S ,proc
S-> if B .then S ,record
S-> if B .then S else S ,record
S-> if B .then S ,integer
S-> if B .then S else S ,integer
S-> if B .then S ,real
S-> if B .then S else S ,real
S-> if B .then S ,call
S-> if B .then S ,id
S-> if B .then S ,while
S-> if B .then S ,if
S-> if B .then S else S ,call
S-> if B .then S else S ,id
S-> if B .then S else S ,while
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I409:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,proc
S-> if B then .S else S ,proc
S-> if B then .S ,record
S-> if B then .S else S ,record
S-> if B then .S ,integer
S-> if B then .S else S ,integer
S-> if B then .S ,real
S-> if B then .S else S ,real
S-> if B then .S ,call
S-> if B then .S ,id
S-> if B then .S ,while
S-> if B then .S ,if
S-> if B then .S else S ,call
S-> if B then .S else S ,id
S-> if B then .S else S ,while
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I410:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,proc
S-> if B then S .else S ,proc
S-> if B then S. ,record
S-> if B then S .else S ,record
S-> if B then S. ,integer
S-> if B then S .else S ,integer
S-> if B then S. ,real
S-> if B then S .else S ,real
S-> if B then S. ,call
S-> if B then S. ,id
S-> if B then S. ,while
S-> if B then S. ,if
S-> if B then S .else S ,call
S-> if B then S .else S ,id
S-> if B then S .else S ,while
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,proc
S-> S .S ,record
S-> S .S ,integer
S-> S .S ,real
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,proc
S-> .id = E ; ,proc
S-> .L = E ; ,proc
S-> .if B then S ,proc
S-> .if B then S else S ,proc
S-> .while B do S ,proc
S-> .call id ( Elist ) ,proc
S-> .S S ,record
S-> .id = E ; ,record
S-> .L = E ; ,record
S-> .if B then S ,record
S-> .if B then S else S ,record
S-> .while B do S ,record
S-> .call id ( Elist ) ,record
S-> .S S ,integer
S-> .id = E ; ,integer
S-> .L = E ; ,integer
S-> .if B then S ,integer
S-> .if B then S else S ,integer
S-> .while B do S ,integer
S-> .call id ( Elist ) ,integer
S-> .S S ,real
S-> .id = E ; ,real
S-> .L = E ; ,real
S-> .if B then S ,real
S-> .if B then S else S ,real
S-> .while B do S ,real
S-> .call id ( Elist ) ,real
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I411:
D-> T .id ; ,#
D-> T .id ; ,proc
D-> T .id ; ,record
D-> T .id ; ,integer
D-> T .id ; ,real

I412:
D-> T id .; ,#
D-> T id .; ,proc
D-> T id .; ,record
D-> T id .; ,integer
D-> T id .; ,real

I413:
D-> T id ;. ,#
D-> T id ;. ,proc
D-> T id ;. ,record
D-> T id ;. ,integer
D-> T id ;. ,real

I414:
P-> S. ,#
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I415:
S-> S S. ,#
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I416:
S-> id .= E ; ,#
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I417:
S-> id = .E ; ,#
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I418:
S-> id = E .; ,#
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I419:
S-> id = E ;. ,#
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if

I420:
S-> L .= E ; ,#
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I421:
S-> L = .E ; ,#
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I422:
S-> L = E .; ,#
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I423:
S-> L = E ;. ,#
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if

I424:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I425:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I426:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I427:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I428:
S-> if B then S else .S ,#
S-> if B then S else .S ,call
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I429:
S-> if B then S else S. ,#
S-> if B then S else S. ,call
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I430:
S-> while .B do S ,#
S-> while .B do S ,call
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I431:
S-> while B .do S ,#
S-> while B .do S ,call
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I432:
S-> while B do .S ,#
S-> while B do .S ,call
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I433:
S-> while B do S. ,#
S-> while B do S. ,call
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,#
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I434:
S-> call .id ( Elist ) ,#
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I435:
S-> call id .( Elist ) ,#
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I436:
S-> call id ( .Elist ) ,#
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I437:
S-> call id ( Elist .) ,#
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I438:
S-> call id ( Elist ). ,#
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I439:
S-> S S. ,#
S-> S S. ,else
S-> S S. ,call
S-> S S. ,id
S-> S S. ,while
S-> S S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I440:
S-> id .= E ; ,#
S-> id .= E ; ,else
S-> id .= E ; ,call
S-> id .= E ; ,id
S-> id .= E ; ,while
S-> id .= E ; ,if
L-> id .[ E ] ,=
L-> id .[ E ] ,[

I441:
S-> id = .E ; ,#
S-> id = .E ; ,else
S-> id = .E ; ,call
S-> id = .E ; ,id
S-> id = .E ; ,while
S-> id = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I442:
S-> id = E .; ,#
S-> id = E .; ,else
S-> id = E .; ,call
S-> id = E .; ,id
S-> id = E .; ,while
S-> id = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I443:
S-> id = E ;. ,#
S-> id = E ;. ,else
S-> id = E ;. ,call
S-> id = E ;. ,id
S-> id = E ;. ,while
S-> id = E ;. ,if

I444:
S-> L .= E ; ,#
S-> L .= E ; ,else
S-> L .= E ; ,call
S-> L .= E ; ,id
S-> L .= E ; ,while
S-> L .= E ; ,if
L-> L .[ E ] ,=
L-> L .[ E ] ,[

I445:
S-> L = .E ; ,#
S-> L = .E ; ,else
S-> L = .E ; ,call
S-> L = .E ; ,id
S-> L = .E ; ,while
S-> L = .E ; ,if
E-> .E + E ,;
E-> .E * E ,;
E-> .- E ,;
E-> .( E ) ,;
E-> .id ,;
E-> .digit ,;
E-> .L ,;
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,;
L-> .L [ E ] ,;
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I446:
S-> L = E .; ,#
S-> L = E .; ,else
S-> L = E .; ,call
S-> L = E .; ,id
S-> L = E .; ,while
S-> L = E .; ,if
E-> E .+ E ,;
E-> E .* E ,;
E-> E .+ E ,+
E-> E .* E ,+
E-> E .+ E ,*
E-> E .* E ,*

I447:
S-> L = E ;. ,#
S-> L = E ;. ,else
S-> L = E ;. ,call
S-> L = E ;. ,id
S-> L = E ;. ,while
S-> L = E ;. ,if

I448:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,else
S-> if .B then S else S ,else
S-> if .B then S ,call
S-> if .B then S else S ,call
S-> if .B then S ,id
S-> if .B then S else S ,id
S-> if .B then S ,while
S-> if .B then S else S ,while
S-> if .B then S ,if
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I449:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,else
S-> if B .then S else S ,else
S-> if B .then S ,call
S-> if B .then S else S ,call
S-> if B .then S ,id
S-> if B .then S else S ,id
S-> if B .then S ,while
S-> if B .then S else S ,while
S-> if B .then S ,if
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I450:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,else
S-> if B then .S else S ,else
S-> if B then .S ,call
S-> if B then .S else S ,call
S-> if B then .S ,id
S-> if B then .S else S ,id
S-> if B then .S ,while
S-> if B then .S else S ,while
S-> if B then .S ,if
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I451:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,else
S-> if B then S .else S ,else
S-> if B then S. ,call
S-> if B then S .else S ,call
S-> if B then S. ,id
S-> if B then S .else S ,id
S-> if B then S. ,while
S-> if B then S .else S ,while
S-> if B then S. ,if
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I452:
S-> if B then S else .S ,#
S-> if B then S else .S ,else
S-> if B then S else .S ,call
S-> if B then S else .S ,id
S-> if B then S else .S ,while
S-> if B then S else .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I453:
S-> if B then S else S. ,#
S-> if B then S else S. ,else
S-> if B then S else S. ,call
S-> if B then S else S. ,id
S-> if B then S else S. ,while
S-> if B then S else S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I454:
S-> while .B do S ,#
S-> while .B do S ,else
S-> while .B do S ,call
S-> while .B do S ,id
S-> while .B do S ,while
S-> while .B do S ,if
B-> .B or B ,do
B-> .B and B ,do
B-> .not B ,do
B-> .( B ) ,do
B-> .E relop E ,do
B-> .true ,do
B-> .false ,do
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I455:
S-> while B .do S ,#
S-> while B .do S ,else
S-> while B .do S ,call
S-> while B .do S ,id
S-> while B .do S ,while
S-> while B .do S ,if
B-> B .or B ,do
B-> B .and B ,do
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I456:
S-> while B do .S ,#
S-> while B do .S ,else
S-> while B do .S ,call
S-> while B do .S ,id
S-> while B do .S ,while
S-> while B do .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I457:
S-> while B do S. ,#
S-> while B do S. ,else
S-> while B do S. ,call
S-> while B do S. ,id
S-> while B do S. ,while
S-> while B do S. ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I458:
S-> call .id ( Elist ) ,#
S-> call .id ( Elist ) ,else
S-> call .id ( Elist ) ,call
S-> call .id ( Elist ) ,id
S-> call .id ( Elist ) ,while
S-> call .id ( Elist ) ,if

I459:
S-> call id .( Elist ) ,#
S-> call id .( Elist ) ,else
S-> call id .( Elist ) ,call
S-> call id .( Elist ) ,id
S-> call id .( Elist ) ,while
S-> call id .( Elist ) ,if

I460:
S-> call id ( .Elist ) ,#
S-> call id ( .Elist ) ,else
S-> call id ( .Elist ) ,call
S-> call id ( .Elist ) ,id
S-> call id ( .Elist ) ,while
S-> call id ( .Elist ) ,if
Elist-> .Elist , E ,)
Elist-> .E ,)
Elist-> .Elist , E ,,
Elist-> .E ,,
E-> .E + E ,)
E-> .E * E ,)
E-> .- E ,)
E-> .( E ) ,)
E-> .id ,)
E-> .digit ,)
E-> .L ,)
E-> .E + E ,,
E-> .E * E ,,
E-> .- E ,,
E-> .( E ) ,,
E-> .id ,,
E-> .digit ,,
E-> .L ,,
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,)
L-> .L [ E ] ,)
L-> .id [ E ] ,,
L-> .L [ E ] ,,
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I461:
S-> call id ( Elist .) ,#
S-> call id ( Elist .) ,else
S-> call id ( Elist .) ,call
S-> call id ( Elist .) ,id
S-> call id ( Elist .) ,while
S-> call id ( Elist .) ,if
Elist-> Elist ., E ,)
Elist-> Elist ., E ,,

I462:
S-> call id ( Elist ). ,#
S-> call id ( Elist ). ,else
S-> call id ( Elist ). ,call
S-> call id ( Elist ). ,id
S-> call id ( Elist ). ,while
S-> call id ( Elist ). ,if

I463:
S-> if .B then S ,#
S-> if .B then S else S ,#
S-> if .B then S ,call
S-> if .B then S ,id
S-> if .B then S ,while
S-> if .B then S ,if
S-> if .B then S else S ,call
S-> if .B then S else S ,id
S-> if .B then S else S ,while
S-> if .B then S else S ,if
B-> .B or B ,then
B-> .B and B ,then
B-> .not B ,then
B-> .( B ) ,then
B-> .E relop E ,then
B-> .true ,then
B-> .false ,then
B-> .B or B ,or
B-> .B and B ,or
B-> .not B ,or
B-> .( B ) ,or
B-> .E relop E ,or
B-> .true ,or
B-> .false ,or
B-> .B or B ,and
B-> .B and B ,and
B-> .not B ,and
B-> .( B ) ,and
B-> .E relop E ,and
B-> .true ,and
B-> .false ,and
E-> .E + E ,==
E-> .E + E ,<=
E-> .E + E ,!=
E-> .E + E ,<
E-> .E + E ,>
E-> .E + E ,>=
E-> .E * E ,==
E-> .E * E ,<=
E-> .E * E ,!=
E-> .E * E ,<
E-> .E * E ,>
E-> .E * E ,>=
E-> .- E ,==
E-> .- E ,<=
E-> .- E ,!=
E-> .- E ,<
E-> .- E ,>
E-> .- E ,>=
E-> .( E ) ,==
E-> .( E ) ,<=
E-> .( E ) ,!=
E-> .( E ) ,<
E-> .( E ) ,>
E-> .( E ) ,>=
E-> .id ,==
E-> .id ,<=
E-> .id ,!=
E-> .id ,<
E-> .id ,>
E-> .id ,>=
E-> .digit ,==
E-> .digit ,<=
E-> .digit ,!=
E-> .digit ,<
E-> .digit ,>
E-> .digit ,>=
E-> .L ,==
E-> .L ,<=
E-> .L ,!=
E-> .L ,<
E-> .L ,>
E-> .L ,>=
E-> .E + E ,+
E-> .E * E ,+
E-> .- E ,+
E-> .( E ) ,+
E-> .id ,+
E-> .digit ,+
E-> .L ,+
E-> .E + E ,*
E-> .E * E ,*
E-> .- E ,*
E-> .( E ) ,*
E-> .id ,*
E-> .digit ,*
E-> .L ,*
L-> .id [ E ] ,==
L-> .L [ E ] ,==
L-> .id [ E ] ,<=
L-> .L [ E ] ,<=
L-> .id [ E ] ,!=
L-> .L [ E ] ,!=
L-> .id [ E ] ,<
L-> .L [ E ] ,<
L-> .id [ E ] ,>
L-> .L [ E ] ,>
L-> .id [ E ] ,>=
L-> .L [ E ] ,>=
L-> .id [ E ] ,+
L-> .L [ E ] ,+
L-> .id [ E ] ,*
L-> .L [ E ] ,*
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I464:
S-> if B .then S ,#
S-> if B .then S else S ,#
S-> if B .then S ,call
S-> if B .then S ,id
S-> if B .then S ,while
S-> if B .then S ,if
S-> if B .then S else S ,call
S-> if B .then S else S ,id
S-> if B .then S else S ,while
S-> if B .then S else S ,if
B-> B .or B ,then
B-> B .and B ,then
B-> B .or B ,or
B-> B .and B ,or
B-> B .or B ,and
B-> B .and B ,and

I465:
S-> if B then .S ,#
S-> if B then .S else S ,#
S-> if B then .S ,call
S-> if B then .S ,id
S-> if B then .S ,while
S-> if B then .S ,if
S-> if B then .S else S ,call
S-> if B then .S else S ,id
S-> if B then .S else S ,while
S-> if B then .S else S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[

I466:
S-> if B then S. ,#
S-> if B then S .else S ,#
S-> if B then S. ,call
S-> if B then S. ,id
S-> if B then S. ,while
S-> if B then S. ,if
S-> if B then S .else S ,call
S-> if B then S .else S ,id
S-> if B then S .else S ,while
S-> if B then S .else S ,if
S-> S .S ,#
S-> S .S ,else
S-> S .S ,call
S-> S .S ,id
S-> S .S ,while
S-> S .S ,if
S-> .S S ,#
S-> .id = E ; ,#
S-> .L = E ; ,#
S-> .if B then S ,#
S-> .if B then S else S ,#
S-> .while B do S ,#
S-> .call id ( Elist ) ,#
S-> .S S ,else
S-> .id = E ; ,else
S-> .L = E ; ,else
S-> .if B then S ,else
S-> .if B then S else S ,else
S-> .while B do S ,else
S-> .call id ( Elist ) ,else
S-> .S S ,call
S-> .id = E ; ,call
S-> .L = E ; ,call
S-> .if B then S ,call
S-> .if B then S else S ,call
S-> .while B do S ,call
S-> .call id ( Elist ) ,call
S-> .S S ,id
S-> .id = E ; ,id
S-> .L = E ; ,id
S-> .if B then S ,id
S-> .if B then S else S ,id
S-> .while B do S ,id
S-> .call id ( Elist ) ,id
S-> .S S ,while
S-> .id = E ; ,while
S-> .L = E ; ,while
S-> .if B then S ,while
S-> .if B then S else S ,while
S-> .while B do S ,while
S-> .call id ( Elist ) ,while
S-> .S S ,if
S-> .id = E ; ,if
S-> .L = E ; ,if
S-> .if B then S ,if
S-> .if B then S else S ,if
S-> .while B do S ,if
S-> .call id ( Elist ) ,if
L-> .id [ E ] ,=
L-> .L [ E ] ,=
L-> .id [ E ] ,[
L-> .L [ E ] ,[
